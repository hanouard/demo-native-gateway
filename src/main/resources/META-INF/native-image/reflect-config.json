[
{
  "name":"boolean[]"
},
{
  "name":"byte[]"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.Appender"
},
{
  "name":"char[]"
},
{
  "name":"com.example.demonativegateway.DemoNativeGatewayApplication",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"getJsonFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"double[]"
},
{
  "name":"float[]"
},
{
  "name":"int[]"
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
},
{
  "name":"io.netty.handler.codec.http.HttpClientCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.handler.ssl.SslHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$1"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$3"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.Closeable",
  "allPublicMethods":true
},
{
  "name":"java.io.DataInput"
},
{
  "name":"java.io.DataOutput"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.ObjectInputStream"
},
{
  "name":"java.io.ObjectOutputStream"
},
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.AbstractStringBuilder"
},
{
  "name":"java.lang.CharSequence",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.CharSequence[]"
},
{
  "name":"java.lang.Class",
  "allDeclaredMethods":true,
  "methods":[{"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Module",
  "allDeclaredMethods":true,
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.StringBuffer"
},
{
  "name":"java.lang.StringBuilder"
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.annotation.Documented",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Type",
  "allPublicMethods":true
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketOption"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.StandardSocketOptions",
  "fields":[
    {"name":"IP_MULTICAST_IF"}, 
    {"name":"IP_MULTICAST_LOOP"}, 
    {"name":"IP_MULTICAST_TTL"}
  ]
},
{
  "name":"java.net.URI",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.NetworkChannel",
  "methods":[
    {"name":"getOption","parameterTypes":["java.net.SocketOption"] }, 
    {"name":"setOption","parameterTypes":["java.net.SocketOption","java.lang.Object"] }
  ]
},
{
  "name":"java.nio.charset.Charset"
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.ECPrivateKey"
},
{
  "name":"java.security.interfaces.ECPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.time.Duration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.temporal.Temporal"
},
{
  "name":"java.time.temporal.TemporalAmount",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.temporal.TemporalUnit"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.AbstractList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.ArrayList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Collection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Comparator"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EventListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.List",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.RandomAccess",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.concurrent.Executor"
},
{
  "name":"java.util.concurrent.Flow$Publisher"
},
{
  "name":"java.util.function.Consumer"
},
{
  "name":"java.util.function.IntFunction"
},
{
  "name":"java.util.function.Predicate"
},
{
  "name":"java.util.function.UnaryOperator"
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.PostConstruct",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.net.ssl.SSLEngine",
  "methods":[
    {"name":"getApplicationProtocol","parameterTypes":[] }, 
    {"name":"getHandshakeApplicationProtocol","parameterTypes":[] }, 
    {"name":"getHandshakeApplicationProtocolSelector","parameterTypes":[] }, 
    {"name":"setHandshakeApplicationProtocolSelector","parameterTypes":["java.util.function.BiFunction"] }
  ]
},
{
  "name":"javax.net.ssl.SSLParameters",
  "methods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.validation.Constraint",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.ConstraintValidator",
  "allPublicMethods":true
},
{
  "name":"javax.validation.Valid",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.Validator"
},
{
  "name":"javax.validation.ValidatorFactory"
},
{
  "name":"javax.validation.bootstrap.GenericBootstrap"
},
{
  "name":"javax.validation.constraints.Max",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.constraints.NotEmpty",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.constraints.NotNull",
  "allDeclaredMethods":true
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"long[]"
},
{
  "name":"org.apache.logging.log4j.LogManager"
},
{
  "name":"org.apache.logging.log4j.Logger"
},
{
  "name":"org.apache.logging.log4j.message.DefaultFlowMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.message.ReusableMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.AbstractLogger"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JLoggerContextFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.aot.StaticSpringFactories"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration$$Lambda$496/0x0000000840307440",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration$$Lambda$497/0x0000000840306840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ResourceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getCache","parameterTypes":[] }, 
    {"name":"getChain","parameterTypes":[] }, 
    {"name":"getStaticLocations","parameterTypes":[] }, 
    {"name":"isAddMappings","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"hasBeenCustomized","parameterTypes":[] }, 
    {"name":"setAddMappings","parameterTypes":["boolean"] }, 
    {"name":"setStaticLocations","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, 
    {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }, 
    {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, 
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, 
    {"name":"setMessageReaders","parameterTypes":["java.util.List"] }, 
    {"name":"setMessageWriters","parameterTypes":["java.util.List"] }, 
    {"name":"setViewResolvers","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocation[]"
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "allDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$466/0x000000084029f840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, 
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","boolean"] }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorAttributes",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterSingletonsInstantiated","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.RsaProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.event.HeartbeatMonitor"
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory"
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.commons.httpclient.HttpClientConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScope"
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration"
},
{
  "name":"org.springframework.cloud.gateway.config.GlobalCorsProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.HttpClientProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.config.MaxDataSizeValidator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"initialize","parameterTypes":["java.lang.annotation.Annotation"] }]
},
{
  "name":"org.springframework.cloud.gateway.config.PropertiesRouteDefinitionLocator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledFilter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledGlobalFilter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.ConditionalOnEnabledPredicate",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledGlobalFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.config.conditional.OnEnabledPredicate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.FilterDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.ForwardPathFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.ForwardRoutingFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.GlobalFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.NettyRoutingFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.NettyWriteResponseFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter"
},
{
  "name":"org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.WebsocketRoutingFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractChangeRequestUriGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddRequestParameterGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.AddResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.DedupeResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.GatewayFilterFactory",
  "allPublicMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.MapRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.PrefixPathGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.PreserveHostHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RedirectToGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveRequestParameterGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RemoveResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestHeaderSizeGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestHeaderToRequestUriGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"apply","parameterTypes":["java.lang.Object"] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RequestSizeGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewriteLocationResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.RewriteResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SaveSessionGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SecureHeadersGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetPathGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetRequestHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetRequestHostHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetResponseHeaderGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory$Config",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.GzipMessageBodyResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.MessageBodyDecoder",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.MessageBodyEncoder",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.ModifyRequestBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.factory.rewrite.ModifyResponseBodyGatewayFilterFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.ForwardedHeadersFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"supports","parameterTypes":["org.springframework.cloud.gateway.filter.headers.HttpHeadersFilter$Type"] }]
},
{
  "name":"org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.filter.ratelimit.KeyResolver"
},
{
  "name":"org.springframework.cloud.gateway.filter.ratelimit.RateLimiter"
},
{
  "name":"org.springframework.cloud.gateway.handler.FilteringWebHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.AbstractRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.AfterRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.BeforeRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.BetweenRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.CloudFoundryRouteServiceRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.HeaderRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.HostRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.MethodRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$Config",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.PredicateDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.QueryRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"shortcutFieldOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.ReadBodyRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"applyAsync","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.RemoteAddrRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.RoutePredicateFactory",
  "allPublicMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.cloud.gateway.handler.predicate.WeightRoutePredicateFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"beforeApply","parameterTypes":["java.lang.Object"] }, 
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutFieldPrefix","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.route.CachingRouteLocator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.CompositeRouteDefinitionLocator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.InMemoryRouteDefinitionRepository",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionLocator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionRepository",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteLocator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.RouteRefreshListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.AbstractConfigurable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getConfigClass","parameterTypes":[] }, 
    {"name":"newConfig","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.support.Configurable",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.ConfigurationService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.gateway.support.ShortcutConfigurable",
  "methods":[
    {"name":"shortcutFieldOrder","parameterTypes":[] }, 
    {"name":"shortcutFieldPrefix","parameterTypes":[] }, 
    {"name":"shortcutType","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.cloud.gateway.support.StringToZonedDateTimeConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.Ordered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AnnotationAttributes[]"
},
{
  "name":"org.springframework.core.annotation.Order",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.converter.Converter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "allPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector"
},
{
  "name":"org.springframework.http.client.reactive.ReactorResourceFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.support.BaseCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.support.DefaultClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.support.DefaultServerCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"clone","parameterTypes":[] }, 
    {"name":"customCodecs","parameterTypes":[] }, 
    {"name":"defaultCodecs","parameterTypes":[] }, 
    {"name":"getReaders","parameterTypes":[] }, 
    {"name":"getWriters","parameterTypes":[] }, 
    {"name":"registerDefaults","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.NativeListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"
},
{
  "name":"org.springframework.security.rsa.crypto.RsaSecretEncryptor"
},
{
  "name":"org.springframework.stereotype.Component",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
},
{
  "name":"org.springframework.validation.SmartValidator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.Validator"
},
{
  "name":"org.springframework.validation.annotation.Validated",
  "allDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.client.AsyncRestTemplate"
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.cors.reactive.PreFlightRequestHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerAdapter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerMapping",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.HandlerResultHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolver",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder$$Lambda$615/0x0000000840444c40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.CorsRegistry"
},
{
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.config.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.reactive.config.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.reactive.config.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder"
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFunction",
  "methods":[{"name":"handle","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathPatternParser","parameterTypes":[] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.reactive.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.reactive.CorsProcessor"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setUseCaseSensitiveMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"setHandlerPredicate","parameterTypes":["java.util.function.BiPredicate"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.HandlerResultHandlerSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getAdapterRegistry","parameterTypes":[] }, 
    {"name":"getContentTypeResolver","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.SimpleHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getMessageWriters","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.client.ReactorNettyWebSocketClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.client.WebSocketClient",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.RequestUpgradeStrategy",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.WebSocketService",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"upgrade","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.reactive.socket.WebSocketHandler","java.lang.String","java.util.function.Supplier"] }
  ]
},
{
  "name":"org.springframework.web.server.WebExceptionHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.adapter.HttpWebHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.handler.ResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, 
    {"name":"setWarnLogCategory","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.web.server.handler.WebHandlerDecorator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getDelegate","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.i18n.LocaleContextResolver",
  "allPublicMethods":true
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.adapter.JdkFlowAdapter",
  "methods":[
    {"name":"flowPublisherToFlux","parameterTypes":["java.util.concurrent.Flow$Publisher"] }, 
    {"name":"publisherToFlowPublisher","parameterTypes":["org.reactivestreams.Publisher"] }
  ]
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.netty.ChannelOperationsId"
},
{
  "name":"reactor.netty.channel.ChannelOperationsHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClient",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"baseUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"compress","parameterTypes":["boolean"] }, 
    {"name":"cookie","parameterTypes":["io.netty.handler.codec.http.cookie.Cookie"] }, 
    {"name":"cookie","parameterTypes":["java.lang.String","java.util.function.Consumer"] }, 
    {"name":"cookieCodec","parameterTypes":["io.netty.handler.codec.http.cookie.ClientCookieEncoder"] }, 
    {"name":"cookieCodec","parameterTypes":["io.netty.handler.codec.http.cookie.ClientCookieEncoder","io.netty.handler.codec.http.cookie.ClientCookieDecoder"] }, 
    {"name":"cookiesWhen","parameterTypes":["java.lang.String","java.util.function.Function"] }, 
    {"name":"create","parameterTypes":[] }, 
    {"name":"create","parameterTypes":["reactor.netty.resources.ConnectionProvider"] }, 
    {"name":"delete","parameterTypes":[] }, 
    {"name":"disableRetry","parameterTypes":["boolean"] }, 
    {"name":"doAfterRequest","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doAfterResponseSuccess","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnError","parameterTypes":["java.util.function.BiConsumer","java.util.function.BiConsumer"] }, 
    {"name":"doOnRedirect","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnRequest","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnRequestError","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnResponse","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnResponseError","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"followRedirect","parameterTypes":["java.util.function.BiPredicate"] }, 
    {"name":"followRedirect","parameterTypes":["java.util.function.BiPredicate","java.util.function.BiConsumer"] }, 
    {"name":"followRedirect","parameterTypes":["java.util.function.BiPredicate","java.util.function.Consumer"] }, 
    {"name":"followRedirect","parameterTypes":["boolean"] }, 
    {"name":"followRedirect","parameterTypes":["boolean","java.util.function.BiConsumer"] }, 
    {"name":"followRedirect","parameterTypes":["boolean","java.util.function.Consumer"] }, 
    {"name":"from","parameterTypes":["reactor.netty.tcp.TcpClient"] }, 
    {"name":"get","parameterTypes":[] }, 
    {"name":"head","parameterTypes":[] }, 
    {"name":"headers","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"headersWhen","parameterTypes":["java.util.function.Function"] }, 
    {"name":"http2Settings","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"httpResponseDecoder","parameterTypes":["java.util.function.Function"] }, 
    {"name":"keepAlive","parameterTypes":["boolean"] }, 
    {"name":"mapConnect","parameterTypes":["java.util.function.Function"] }, 
    {"name":"metrics","parameterTypes":["boolean","java.util.function.Function"] }, 
    {"name":"metrics","parameterTypes":["boolean","java.util.function.Supplier"] }, 
    {"name":"metrics","parameterTypes":["boolean","java.util.function.Supplier","java.util.function.Function"] }, 
    {"name":"newConnection","parameterTypes":[] }, 
    {"name":"noSSL","parameterTypes":[] }, 
    {"name":"observe","parameterTypes":["reactor.netty.ConnectionObserver"] }, 
    {"name":"options","parameterTypes":[] }, 
    {"name":"patch","parameterTypes":[] }, 
    {"name":"port","parameterTypes":["int"] }, 
    {"name":"post","parameterTypes":[] }, 
    {"name":"protocol","parameterTypes":["reactor.netty.http.HttpProtocol[]"] }, 
    {"name":"put","parameterTypes":[] }, 
    {"name":"remoteAddress","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"request","parameterTypes":["io.netty.handler.codec.http.HttpMethod"] }, 
    {"name":"responseTimeout","parameterTypes":["java.time.Duration"] }, 
    {"name":"secure","parameterTypes":[] }, 
    {"name":"secure","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"secure","parameterTypes":["reactor.netty.tcp.SslProvider"] }, 
    {"name":"tcpConfiguration","parameterTypes":["java.util.function.Function"] }, 
    {"name":"warmup","parameterTypes":[] }, 
    {"name":"websocket","parameterTypes":[] }, 
    {"name":"websocket","parameterTypes":["reactor.netty.http.client.WebsocketClientSpec"] }, 
    {"name":"wiretap","parameterTypes":["boolean"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClientConnect",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"configuration","parameterTypes":[] }]
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.netty.http.server.HttpServerResponse"
},
{
  "name":"reactor.netty.http.server.HttpTrafficHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
},
{
  "name":"reactor.netty.tcp.SslProvider$SslReadHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"reactor.netty.transport.ClientTransport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"doAfterResolve","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"doOnConnect","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnConnected","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnDisconnected","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnResolve","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"doOnResolveError","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"host","parameterTypes":["java.lang.String"] }, 
    {"name":"noProxy","parameterTypes":[] }, 
    {"name":"proxy","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"resolver","parameterTypes":["io.netty.resolver.AddressResolverGroup"] }, 
    {"name":"resolver","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"runOn","parameterTypes":["reactor.netty.resources.LoopResources","boolean"] }
  ]
},
{
  "name":"reactor.netty.transport.ServerTransport$Acceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.transport.ServerTransport$AcceptorInitializer"
},
{
  "name":"reactor.netty.transport.Transport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"attr","parameterTypes":["io.netty.util.AttributeKey","java.lang.Object"] }, 
    {"name":"bindAddress","parameterTypes":["java.util.function.Supplier"] }, 
    {"name":"channelGroup","parameterTypes":["io.netty.channel.group.ChannelGroup"] }, 
    {"name":"doOnChannelInit","parameterTypes":["reactor.netty.ChannelPipelineConfigurer"] }, 
    {"name":"option","parameterTypes":["io.netty.channel.ChannelOption","java.lang.Object"] }, 
    {"name":"runOn","parameterTypes":["io.netty.channel.EventLoopGroup"] }, 
    {"name":"runOn","parameterTypes":["reactor.netty.resources.LoopResources"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel","reactor.netty.transport.logging.AdvancedByteBufFormat"] }, 
    {"name":"wiretap","parameterTypes":["java.lang.String","io.netty.handler.logging.LogLevel","reactor.netty.transport.logging.AdvancedByteBufFormat","java.nio.charset.Charset"] }
  ]
},
{
  "name":"reactor.netty.transport.TransportConfig$TransportChannelInitializer"
},
{
  "name":"short[]"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.pkcs.SignerInfo[]"
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DRBG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
